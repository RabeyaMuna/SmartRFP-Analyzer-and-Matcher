name: Docker Build and Deploy in Azure VM

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Echo each secret to verify it's properly set
      - name: Check secrets
        run: |
          echo "AZURE_DATABASE_CONNECTOR=${{ secrets.AZURE_DATABASE_CONNECTOR }}"
          echo "AZ_VM_HOST=${{ secrets.AZURE_VM_HOST }}"
          echo "AZ_VM_USERNAME=${{ secrets.AZURE_VM_USERNAME }}"
          echo "AZ_VM_PASSWORD=${{ secrets.AZURE_VM_PASSWORD }}"
          echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}"

      # Create .env file for backend
      - name: Create backend .env file
        run: |
          touch backend/.env
          echo 'AZURE_DATABASE_CONNECTOR=${{ secrets.AZURE_DATABASE_CONNECTOR }}' >> backend/.env

      # Create .env file for frontend
      - name: Create frontend .env file
        run: |
          touch frontend/.env
          echo 'REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}' >> frontend/.env

      - name: Log into Azure Container Registry
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
      - name: Build backend Docker image and push to Azure Container Registry
        run: |
            docker build -t pem-backend-image ./backend
            docker tag pem-backend-image:latest "${{ secrets.ACR_LOGIN_SERVER }}/pem-backend-image:latest"
            docker push "${{ secrets.ACR_LOGIN_SERVER }}/pem-backend-image:latest"

      - name: Build frontend image and Push frontend Docker image to ACR
        run: |
          docker build -t pem-frontend-image:latest ./frontend
          docker tag pem-frontend-image:latest ${{ secrets.ACR_LOGIN_SERVER }}/pem-frontend-image:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/pem-frontend-image:latest
          
      - name: SSH into Azure VM and perform Docker operations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          script: |

            # Stop all running Docker containers

            docker stop $(docker ps -aq)
            # Check if there are any images available or not
            if docker images -q | grep . >/dev/null; then
              # Remove all Docker images
              docker rmi -f $(docker images -q)
            fi

            # Pull new backend and frontend Docker images from Azure Container Registry

            docker pull ${{ secrets.ACR_LOGIN_SERVER }}/pem-backend-image:latest

            docker pull ${{ secrets.ACR_LOGIN_SERVER }}/pem-frontend-image:latest

            # Run backend container mapping port 8000:8000
            docker run -d -p 8000:8000 ${{ secrets.ACR_LOGIN_SERVER }}/pem-backend-image:latest
            
            # Run frontend container mapping port 3000:3000
            docker run -d -p 3000:3000 ${{ secrets.ACR_LOGIN_SERVER }}/pem-frontend-image:latest
